/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.formation.recettescuisine;

import fr.formation.recettescuisine.connection.ConnectionBDD;
import fr.formation.recettescuisine.dao.AperitifsDAO;
import fr.formation.recettescuisine.dao.DessertsDAO;
import fr.formation.recettescuisine.dao.EntreesDAO;
import fr.formation.recettescuisine.dao.PlatsDAO;
import java.util.ArrayList;
import java.util.List;
import fr.formation.recettescuisine.dao.RecettesDAO;
import fr.formation.recettescuisine.pojo.RecettesPOJO;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author Administrator
 */
public class InsertRecette extends javax.swing.JFrame {

    private Connection connection;
    private RecettesDAO recettesDAO;

    private AperitifsDAO aperitifsDAO;
    
    private DessertsDAO dessertsDAO;
    private EntreesDAO entreesDAO;
    private PlatsDAO platsDAO;
    /**
     * Creates new form InsertRecette
     */
    public InsertRecette() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        afficheinserttype = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        validinsert = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1insertrecette = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane2insertingredients = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Types recettes");

        afficheinserttype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        afficheinserttype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficheinserttypeActionPerformed(evt);
            }
        });

        jLabel2.setText("Nom Recettes");

        validinsert.setText("valider");
        validinsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validinsertActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTextPane1insertrecette);

        jLabel3.setText("Ingredients");

        jScrollPane1.setViewportView(jTextPane2insertingredients);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(validinsert))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(afficheinserttype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(afficheinserttype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(validinsert)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void afficheinserttypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficheinserttypeActionPerformed
        // initialisation de la liste des noms de recette    
        List<String> nomsRecettesList = new ArrayList<String>();

        // récupération du type de recette
        String typeRecettesSelected = afficheinserttype.getSelectedItem().toString();
        int idRecette = recettesDAO.getIdFromNomRecettes(typeRecettesSelected);

    }//GEN-LAST:event_afficheinserttypeActionPerformed

    private void validinsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validinsertActionPerformed
        String nom = null;
        String ingredients = null;
        String typeRecettesSelected = afficheinserttype.getSelectedItem().toString();

        if (typeRecettesSelected.equals("apéritifs")) {

            nom = jTextPane1insertrecette.getText();
            ingredients = jTextPane2insertingredients.getText();

            // insertion en bdd
            aperitifsDAO.ajoutRecette(nom, ingredients);

        }
         if (typeRecettesSelected.equals("desserts")) {

            nom = jTextPane1insertrecette.getText();
            ingredients = jTextPane2insertingredients.getText();

            // insertion en bdd
             dessertsDAO.ajoutRecette(nom, ingredients);
         }
         if (typeRecettesSelected.equals("entrées")) {

            nom = jTextPane1insertrecette.getText();
            ingredients = jTextPane2insertingredients.getText();

            // insertion en bdd
             entreesDAO.ajoutRecette(nom, ingredients);
         }
         if (typeRecettesSelected.equals("plats")) {

            nom = jTextPane1insertrecette.getText();
            ingredients = jTextPane2insertingredients.getText();

            // insertion en bdd
             platsDAO.ajoutRecette(nom, ingredients);
         }

    }//GEN-LAST:event_validinsertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertRecette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertRecette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertRecette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertRecette.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                InsertRecette insertRecette = new InsertRecette();
                insertRecette.setVisible(true);
                insertRecette.setTitle("ajout recette");
            }
        });
    }

    private void init() {
        // TODO add your handling code here:
        ConnectionBDD connectionBDD = new ConnectionBDD();

        // mapping de la connexion de l'annuaire "this.connection"  avec la connexion retournee par 
        // connectionBDD.openConnectionBDD()
        this.connection = connectionBDD.openConnectionBDD();

        // Creation (instantiation) d'un DAO  en utilisant le
        // constructeur qui prend en parametre 
        // la connexion de l'annuaire "this.connection" 
        recettesDAO = new RecettesDAO(connection);
        aperitifsDAO = new AperitifsDAO(connection);
        dessertsDAO = new DessertsDAO(connection);
        entreesDAO = new EntreesDAO(connection);
        platsDAO = new PlatsDAO(connection);

        // recuperation de la liste des recettespojo mappee avec la liste "listerecetttepojo" 
        // en executant la requête "select_all" definie dans la methode findAllArrondissement() du DAO
        List<RecettesPOJO> listeRecettesPOJOs = recettesDAO.findAllRecettes();

        afficheinserttype.addItem("");

        // boucle sur la liste des arrondissements et ajout d'un item dans la combo box de
        // l'arrondissement courant
        for (RecettesPOJO listeRecettesPOJO : listeRecettesPOJOs) {
            afficheinserttype.addItem(listeRecettesPOJO.getNomRecettes());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> afficheinserttype;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1insertrecette;
    private javax.swing.JTextPane jTextPane2insertingredients;
    private javax.swing.JButton validinsert;
    // End of variables declaration//GEN-END:variables

}
